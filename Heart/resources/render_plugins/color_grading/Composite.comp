#version 460

#extension GL_EXT_shader_image_load_formatted : require

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(binding = 0) uniform readonly image2D inputTex;
layout(binding = 1) uniform writeonly image2D outputTex;

layout(push_constant) uniform PushConstants
{
    vec2 srcResolution;
    vec2 dstResolution;
    uint tonemapEnable;
} constants;

// https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/
vec3 ACESFilm(vec3 x)
{
    float a = 2.51f;
    float b = 0.03f;
    float c = 2.43f;
    float d = 0.59f;
    float e = 0.14f;
    return clamp((x*(a*x+b))/(x*(c*x+d)+e), vec3(0.f), vec3(1.f));
}

void main()
{
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    if (coord.x >= int(constants.dstResolution.x) || coord.y >= int(constants.dstResolution.y))
        return;

    vec2 texCoord = vec2(coord) / vec2(constants.dstResolution);
    vec4 finalColor = imageLoad(inputTex, coord);

    if (constants.tonemapEnable == 1) {
        // Tonemapping
        finalColor.xyz = ACESFilm(finalColor.xyz);

        // Gamma correction     
        finalColor.xyz = pow(finalColor.xyz, vec3(0.4545));
    }

    finalColor.a = 1.0;
    imageStore(outputTex, coord, finalColor);
}
